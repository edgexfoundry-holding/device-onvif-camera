Writable:
  LogLevel: INFO
  InsecureSecrets:
    credentials001:
      SecretName: credentials001
      SecretData:
        username: ""
        password: ""
        mode: usernametoken
    credentials002:
      SecretName: credentials002
      SecretData:
        username: ""
        password: ""
        mode: usernametoken

Service:
  Host: localhost
  Port: 59984
  StartupMsg: Camera device service started

MessageBus:
  Optional:
    ClientId: device-onvif-camera

Device:
  # These have common values (currently), but must be here for service local env overrides to apply when customized
  ProfilesDir: "./res/profiles"
  DevicesDir: "./res/devices"
  # The location of Provision Watcher yaml files to import when using auto-discovery
  ProvisionWatchersDir: ./res/provisionwatchers
  Discovery:
    Enabled: true
    Interval: 1h

# Custom configs
AppCustom:
  # The number of seconds to wait when making an Onvif request before timing out
  RequestTimeout: 4
  # The Secret Name of the default credentials to use for devices which do not have MAC Addresses defined, or do not
  # have credentials defined in the CredentialsMap. The magic value of 'NoAuth' here will cause the devices to default
  # to not using any authentication. If authentication is required, it would then need to be manually configured.
  DefaultSecretName: credentials001
  # BaseNotificationURL indicates the device service network location (which should be accessible from onvif devices on the network), when
  # configuring an Onvif Event subscription.
  BaseNotificationURL: 'http://192.168.12.112:59984'
  # Select which discovery mechanism(s) to use
  DiscoveryMode: both # netscan, multicast, or both
  # The target ethernet interface for multicast discovering
  DiscoveryEthernetInterface: eth0
  # List of IPv4 subnets to perform netscan discovery on, in CIDR format (X.X.X.X/Y)
  # separated by commas ex: "192.168.1.0/24,10.0.0.0/24"
  DiscoverySubnets: ""
  # Maximum simultaneous network probes when running netscan discovery.
  ProbeAsyncLimit: 4000
  # Maximum amount of milliseconds to wait for each IP probe before timing out.
  # This will also be the minimum time the discovery process can take.
  ProbeTimeoutMillis: 2000
  # Maximum amount of seconds the discovery process is allowed to run before it will be cancelled.
  # It is especially important to have this configured in the case of larger subnets such as /16 and /8
  MaxDiscoverDurationSeconds: 300
  # Enable or disable the built in status checking of devices, which runs every CheckStatusInterval.
  EnableStatusCheck: true
  # The interval in seconds at which the service will check the connection of all known cameras and update the device status 
  # A longer interval will mean the service will detect changes in status less quickly
  # Maximum 300s (5 minutes)
  CheckStatusInterval: 30
  # AppCustom.CredentialsMap is a map of SecretName -> Comma separated list of mac addresses.
  # Every SecretName used here must also exist as a valid secret in the Secret Store.
  #
  # Note: Anything not defined here will be assigned the default credentials configured via `DefaultSecretName`.
  #
  # Example: (Single mapping for 1 mac address to 1 credential)
  #   credentials001 = "aa:bb:cc:dd:ee:ff"
  #
  # Example: (Multi mapping for 3 mac address to 1 shared credentials)
  #   credentials002 = "11:22:33:44:55:66,ff:ee:dd:cc:bb:aa,ab:12:12:34:34:56:56"
  #
  # These mappings can also be referred to as "groups". In the above case, the `credentials001` group has 1 MAC
  # Address, and the `credentials002` group has 3 MAC Addresses.
  #
  # The special group 'NoAuth' defines mac addresses of cameras where no authentication is needed.
  # The 'NoAuth' key does not exist in the SecretStore. It is not required to add MAC Addresses in here,
  # however it avoids sending the default credentials to cameras which do not need it.
  #
  # IMPORTANT: A MAC Address may only exist in one credential group. If a MAC address is defined in more
  # than one group, it is unpredictable which group the MAC will end up in! If you wish to change the group a MAC
  # address belongs to, first remove it from its existing group, and then add it to the new one.
  CredentialsMap:
    NoAuth: ""
